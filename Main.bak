const byte camPort  =  IN_1;

#define CAMADDR 0x02
#define K_VALUE 3
#include "nxtcamlib-default.nxc"
#define NEAR 1
#define P = 1.0
#define VELOCITY 40

// Global variables.
int nblobs;  // number of blobs that are in view of NXTCam (value between 0 and 8)

//Print sensor information from its register
void ShowSensorInfo(byte prt, byte Addres )
{
   if( i2cread(prt,Addres,0x00,1)>1)
   {
     // sensor name
     TextOut(0, LCD_LINE8, i2cReadString(prt, Addres, 0x10, 8), false);
     // sensor firmware version.
     TextOut(50, LCD_LINE8, i2cReadString(prt, Addres, 0x00, 8), false);
   }
}


task main ()
{
  SetSensor(IN_2, SENSOR_LOWSPEED);
  Wait(800);
  OnFwd(OUT_B,100);
  int bc[10];
  int bl[10];
  int bt[10];
  int br[10];
  int bb[10];
  int i;
  int init;
  int k = 0;
  string k_str;

  ShowSensorInfo(camPort, CAMADDR);
  Wait(500);
  // Initialise the camera
  init = NXTCam_Init(camPort, CAMADDR);
  Wait(1000);
  NXTCam_SendCommand(camPort, CAMADDR, 'E'); // enable tracking
  Wait(300);
  NXTCam_SendCommand(camPort, CAMADDR, 'D'); // disable tracking (SE PRUEBA O SE QUITA)
  Wait(300);
  NXTCam_SendCommand(camPort, CAMADDR, 'L'); // line tracking
  Wait(300);
  NXTCam_SendCommand(camPort, CAMADDR, 'E'); // enable tracking
  Wait(300);
  PlayTone(440, 50);
  while (true)
  {
    if(SensorUS(IN_2)<NEAR)
    {
        Off(OUT_AC);
        PlayTone(500, 50);
        Wait(100);
    }
    else
    {
      ShowSensorInfo(camPort, CAMADDR);
      Wait(100);
      NXTCam_GetBlobs(camPort, CAMADDR, nblobs, bc, bl, bt, br, bb);
      k = 0;
      if(nblobs > 0)
      {
          k = br[0]-100;
          if(k > K_VALUE)
          {
              OnFwd(OUT_A, VELOCITY+k);
              OnFwd(OUT_C, VELOCITY-k);

          }
          else if(k < -K_VALUE)
          {
              OnFwd(OUT_C, VELOCITY+k);
              OnFwd(OUT_A, VELOCITY-k);
          }
          else
          {
              OnFwd (OUT_AC, VELOCITY);
          }
          Wait(200);
      }
      else
      {
          Off(OUT_AC);
          PlayTone(300, 30);
          Wait(500);
      }
    }
  }
  PlayTone(440, 30);
  NXTCam_SendCommand(camPort, CAMADDR, 'D'); // disable tracking
  Wait(500);
  StopAllTasks();
}
